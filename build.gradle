apply plugin: 'c'
apply plugin: 'cpp'
apply plugin: 'cunit'


model {
  repositories {
    def libraryLocation = System.getProperty("user.home") + "/.gradle-libs/"

    libs(PrebuiltLibraries) {
      cunit {
          def libPath = libraryLocation + "CUnit/2.1-3/lib/"
	        println libPath
          headers.srcDir libPath + "/include"
          binaries.withType(StaticLibraryBinary) {
            staticLibraryFile = file(libPath+"libcunit.a")
          }
      }

      ncurses {
        def libPath = libraryLocation + "ncurses/5.4/"
        binaries.withType(SharedLibraryBinary) {
          sharedLibraryFile = file(libPath +
            findDynamicLibraryForPlatform(targetPlatform, "libncurses"))
        }
      }
    }
  }

  components {
    snakeLib(NativeLibrarySpec)
    snake(NativeExecutableSpec) {
      binaries.all {
        lib library: "snakeLib", linkage: "static"
      }
    }
  }

  binaries {
    all {
      lib library: "ncurses", linkage: "shared"

      if (toolChain in Clang) {
        cppCompiler.args "-std=c++14"
        cppCompiler.args "-g"
      }

      if (buildType == buildTypes.debug) {
        cppCompiler.args "-g"
      }
    }

    withType(CUnitTestSuiteBinarySpec) {
          lib library: "cunit", linkage: "static"

      }
    }
}

def findDynamicLibraryForPlatform(Platform platform, String lib) {
  if (platform.operatingSystem.macOsX) {
    return lib + ".dylib"
  } else {
    return lib + ".so"
  }
}
