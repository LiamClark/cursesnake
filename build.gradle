apply plugin: 'c'
apply plugin: 'cpp'
apply plugin: 'cunit'


model {
  repositories{
    //specify the libraryLocation
    def libraryLocation = "/usr/local/Cellar/"

    libs(PrebuiltLibraries) {
      cunit {
          def libPath = "cunit/2.1-3/lib/libcunit.a"
          headers.srcDir libraryLocation + "cunit/2.1-3/include"
          binaries.withType(StaticLibraryBinary) {
            staticLibraryFile = file(libraryLocation + libPath)
          }
      }

      ncurses {
        binaries.withType(SharedLibraryBinary) {
          sharedLibraryFile = file("/usr/lib/libncurses.dylib")
        }
      }
    }
  }

  components {
    snakeLib(NativeLibrarySpec)
    snake(NativeExecutableSpec) {
      binaries.all {
        lib library: "snakeLib", linkage: "static"
      }
    }
  }

  binaries {
    all {
      lib library: "ncurses", linkage: "shared"

      if (toolChain in Clang) {
        cppCompiler.args "-std=c++14"
        cppCompiler.args "-g"
      }

      if (buildType == buildTypes.debug) {
        cppCompiler.args "-g"
      }
    }

    withType(CUnitTestSuiteBinarySpec) {
          lib library: "cunit", linkage: "static"

      }
    }
}
